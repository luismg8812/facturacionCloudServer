CREATE  TABLE ROL (
  ROL_ID                           smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_ROL
    PRIMARY KEY ( ROL_ID ) 
);

CREATE  TABLE TIPO_RESOLUCION (
  TIPO_RESOLUCION_ID               smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_TIPO_RESOLUCION
    PRIMARY KEY ( TIPO_RESOLUCION_ID ) 
);

CREATE  TABLE RESPONSABILIDAD_FISCAL (
  RESPONSABILIDAD_FISCAL_ID        smallint NOT NULL,
  CODIGO						   SMALLINT,
  NOMBRE                           VARCHAR(150),
   estado 						   smallint, 	
  CONSTRAINT PK_RESPONSABILIDAD_FISCAL_ID
    PRIMARY KEY ( RESPONSABILIDAD_FISCAL_ID ) 
);

CREATE  TABLE fact_tipo_empresa (
  fact_tipo_empresa_ID             smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  CODIGO                           VARCHAR(10),
  CONSTRAINT PK_fact_tipo_empresa
    PRIMARY KEY ( fact_tipo_empresa_ID ) 
);



CREATE  TABLE tipo_impresion (
  tipo_impresion_ID                smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  FORMATO                         VARCHAR(10),
  CONSTRAINT PK_tipo_impresion
    PRIMARY KEY ( tipo_impresion_ID ) 
);

CREATE  TABLE TIPO_IDENTIFICACION (
  TIPO_IDENTIFICACION_ID           smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  NOMBRE_CORTO                     VARCHAR(4),
  CONSTRAINT PK_TIPO_IDENTIFICACION
    PRIMARY KEY ( TIPO_IDENTIFICACION_ID ) 
);

CREATE  TABLE MENU (
  MENU_ID                          smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_MENU
    PRIMARY KEY ( MENU_ID ) 
); 

CREATE  TABLE RESOLUCION_EMPRESA (
  RESOLUCION_EMPRESA_ID            smallint NOT NULL,
  empresa_id				       smallint,
  TIPO_RESOLUCION_ID               smallint,
  NOMBRE                           VARCHAR(50),
  resolucion_dian                  varchar(60),
  LETRA_CONSECUTIVO                VARCHAR(10),
  autorizacion_desde               int,
  autorizacion_hasta               int,
  fecha_resolucion                 timestamp,
  CONSECUTIVO					   int,
  t_factura                        varchar(30),
  CONSTRAINT PK_RESOLUCION_EMPRESA
    PRIMARY KEY ( RESOLUCION_EMPRESA_ID )
);





CREATE  TABLE   TIPO_EMPRESA (
  TIPO_EMPRESA_ID          smallint NOT NULL,
  NOMBRE                   VARCHAR(50),
  CONSTRAINT PK_TIPO_EMPRESA
    PRIMARY KEY ( TIPO_EMPRESA_ID )
);

CREATE  TABLE   PAGO_EMPLEADO (
  PAGO_EMPLEADO_ID          smallint NOT NULL,
  NOMBRE                   VARCHAR(50),
  CONSTRAINT PK_PAGO_EMPLEADO
    PRIMARY KEY ( PAGO_EMPLEADO_ID )
);

CREATE  TABLE   ESTADO_EMPRESA (
  ESTADO_EMPRESA_ID        smallint NOT NULL,
  NOMBRE                   VARCHAR(50),
  CONSTRAINT PK_ESTADO_EMPRESA
    PRIMARY KEY ( ESTADO_EMPRESA_ID )
);

CREATE  TABLE EMPRESA (
  EMPRESA_ID                       smallint NOT NULL,
  TIPO_EMPRESA_ID 				   smallint,
  ESTADO_EMPRESA_ID				   smallint,
  NOMBRE                           VARCHAR(50),
  REPRESENTE                       VARCHAR(100),
  NIT                              VARCHAR(20),
  DIGITO_VERIFICACION			   VARCHAR(1),
  REGIMEN                          VARCHAR(20),
  DIRECCION                        VARCHAR(50),
  BARRIO                           VARCHAR(50),
  CIUDAD                           VARCHAR(50),
  DEPARTAMENTO                     VARCHAR(50),
  TELEFONO_FIJO                    VARCHAR(50),
  CEL                              VARCHAR(11),
  SLOGAN                           varchar(100),
  IMPUESTO                         varchar(12), 
  actividad_economica			   varchar(100),
  url_logo	  				       varchar(500),
  correo 						   varchar(50),
  CONSTRAINT PK_EMPRESA
  PRIMARY KEY ( EMPRESA_ID ) 
);
ALTER TABLE RESOLUCION_EMPRESA ADD CONSTRAINT FK_TIPO_RESOLU_REFERENCE_RESO_EMPRESA
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);

CREATE  TABLE EMPLEADO (
  EMPLEADO_ID                      smallint NOT NULL DEFAULT nextval('S_EMPLEADO'),
  EMPRESA_ID                       smallint,
  NOMBRE                           VARCHAR(100),
  APELLIDO                         VARCHAR(100),
  TELEFONO                         VARCHAR(20),
  IDENTIFICACION                   VARCHAR(20),
  ESTADO                           smallint,
  PAGO_EMPLEADO_ID					smallint,
  PORCENTAJE_PAGO					smallint,
  PORCENTAJE_DESCUENTO					smallint,
  SUELDO							DECIMAL,
  PAGO_ADMIN						DECIMAL,
  CONSTRAINT PK_EMPLEADO
    PRIMARY KEY ( EMPLEADO_ID ) 
);  



CREATE  TABLE departamento (
 DEPARTAMENTO_ID                   smallint NOT NULL,
 NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_DEPARTAMENTO
    PRIMARY KEY ( DEPARTAMENTO_ID ) 
);

CREATE  TABLE MARCA_VEHICULO (
 MARCA_VEHICULO_ID               smallint NOT NULL,
 NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_MARCA_VEHICULO
    PRIMARY KEY ( MARCA_VEHICULO_ID ) 
);

CREATE  TABLE INVOICE (
  INVOICE_ID                smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_INVOICE
    PRIMARY KEY ( INVOICE_ID ) 
);

CREATE  TABLE TIPO_PAGO(
  TIPO_PAGO_ID                     smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_TIPO_PAGO
    PRIMARY KEY ( TIPO_PAGO_ID ) 
);

CREATE  TABLE TIPO_DOCUMENTO(
  TIPO_DOCUMENTO_ID                smallint NOT NULL,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_TIPO_DOCUMENTO
    PRIMARY KEY (TIPO_DOCUMENTO_ID) 
);

CREATE  TABLE PRODUCTO_EMPLEADO (
  PRODUCTO_EMPLEADO_ID             smallint NOT NULL DEFAULT nextval('S_PRODUCTO_EMPLEADO'),
  EMPLEADO_ID                      smallint,
  VALOR							   decimal,
  cierre_diario                    smallint,
  concepto_producto                varchar(50),
  FECHA_REGISTRO                   timestamp,
  CONSTRAINT PK_PRODUCTO_EMPLEADO
    PRIMARY KEY ( PRODUCTO_EMPLEADO_ID ) 
);  

ALTER TABLE PRODUCTO_EMPLEADO ADD CONSTRAINT FK_pro_emp_REFERENCE_empleado
 FOREIGN KEY (EMPLEADO_ID)
    REFERENCES empleado (EMPLEADO_ID); 

CREATE  TABLE CIUDAD (
  CIUDAD_ID                        int NOT NULL,
  NOMBRE                           VARCHAR(50),
  DEPARTAMENTO_ID                  smallint,
  CONSTRAINT PK_CIUDAD
    PRIMARY KEY ( CIUDAD_ID ) 
);

ALTER TABLE CIUDAD ADD CONSTRAINT FK_CIUDAD_REFERENCE_DEPAR
 FOREIGN KEY (DEPARTAMENTO_ID)
    REFERENCES DEPARTAMENTO (DEPARTAMENTO_ID); 
	
CREATE  TABLE MODELO_MARCA (
  MODELO_MARCA_ID                        int NOT NULL,
  NOMBRE                           VARCHAR(100),
  MARCA_VEHICULO_ID                smallint,
  CONSTRAINT PK_MODELO_MARCA
    PRIMARY KEY ( MODELO_MARCA_ID ) 
);

ALTER TABLE MODELO_MARCA ADD CONSTRAINT FK_MODELO_REFERENCE_MARCA
 FOREIGN KEY (MARCA_VEHICULO_ID)
    REFERENCES MARCA_VEHICULO (MARCA_VEHICULO_ID); 	

CREATE  TABLE MARCA (
  MARCA_ID                int NOT NULL DEFAULT nextval('S_MARCA'),
  EMPRESA_ID			  int,
  NOMBRE                  VARCHAR(50),
  CONSTRAINT PK_MARCA
    PRIMARY KEY ( MARCA_ID ) 
);


ALTER TABLE MARCA ADD CONSTRAINT FK_EMPR_REFERENCE_MARCA
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);

CREATE  TABLE GRUPO (
  GRUPO_ID                         smallint NOT NULL DEFAULT nextval('S_GRUPO'),
  EMPRESA_ID			           int,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_GRUPO
    PRIMARY KEY ( GRUPO_ID ) 
);

ALTER TABLE GRUPO ADD CONSTRAINT FK_EMPR_REFERENCE_GRUPO
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);
	
CREATE  TABLE sub_GRUPO (
  sub_GRUPO_ID                         smallint NOT NULL DEFAULT nextval('S_GRUPO'),
  EMPRESA_ID			           int,
  NOMBRE                           VARCHAR(50),
  CONSTRAINT PK_sub_GRUPO
    PRIMARY KEY ( sub_GRUPO_ID ) 
);

ALTER TABLE sub_GRUPO ADD CONSTRAINT FK_EMPR_REFERENCE_sub_GRUPO
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);	


CREATE  TABLE PROVEEDOR (
  PROVEEDOR_ID                     int NOT NULL DEFAULT nextval('S_PROVEEDOR'),
  CIUDAD_ID                        int,
  EMPRESA_ID					   int, 
  tipo_identificacion_id		   smallint,
  NOMBRE                           VARCHAR(100),
  SEGUNDO_NOMBRE                   VARCHAR(50),
  APELLIDOS                        VARCHAR(100),
  SEGUNDO_APELLIDO                 VARCHAR(50),
  DOCUMENTO                        VARCHAR(30),
  BARRIO                           VARCHAR(50),
  DIRECCION                        VARCHAR(50),
  CELULAR                          decimal,
  FIJO                             decimal,
  FECHA_REGISTRO                   timestamp,
  CREDITO_ACTIVO                   smallint,
  CUPO_CREDITO                     decimal,
  RETENCION                        decimal,
  BASE_RETENCION				   decimal,
  mail                             VARCHAR(100),
  CONSTRAINT PK_PROVEEDOR
    PRIMARY KEY ( PROVEEDOR_ID ) 
);
ALTER TABLE PROVEEDOR ADD CONSTRAINT FK_CIUDAD_REFERENCE_PROV
  FOREIGN KEY (CIUDAD_ID)
    REFERENCES CIUDAD (CIUDAD_ID);
	
ALTER TABLE PROVEEDOR ADD CONSTRAINT FK_EMPR_REFERENCE_PROV
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);	

	    
CREATE  TABLE CLIENTE (
  CLIENTE_ID                       int NOT NULL DEFAULT nextval('S_CLIENTE'),
  EMPRESA_ID					   int, 
  tipo_identificacion_id		   smallint,
  fact_tipo_empresa_id             smallint,
  NOMBRE                           VARCHAR(50),
  RAZON_SOCIAL                     VARCHAR(100),
  DIGITO_VERIFICACION			   varchar(1),
  SEGUNDO_NOMBRE                   VARCHAR(50),
  APELLIDOS                        VARCHAR(50),
  SEGUNDO_APELLIDO                 VARCHAR(50),
  DOCUMENTO                        VARCHAR(30),
  CIUDAD_ID                        int,
  BARRIO                           VARCHAR(50),
  DIRECCION                        VARCHAR(50),
  CELULAR                          VARCHAR(20),
  FIJO                             VARCHAR(20),
  FECHA_REGISTRO                   timestamp,
  CUMPLEANOS                       timestamp,
  CREDITO_ACTIVO                   smallint,
  CUPO_CREDITO                     decimal,
  RETENCION                        decimal,
  mail                             VARCHAR(100),
  	   
  CONSTRAINT PK_CLIENTE
    PRIMARY KEY ( CLIENTE_ID ) 
);
ALTER TABLE CLIENTE ADD CONSTRAINT FK_CIUDAD_REFERENCE_CLI
  FOREIGN KEY (CIUDAD_ID)
    REFERENCES CIUDAD (CIUDAD_ID);  
ALTER TABLE CLIENTE ADD CONSTRAINT FK_EMPE_REFERENCE_CLI
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID); 	
ALTER TABLE CLIENTE ADD CONSTRAINT FK_tipo_iden_REFERENCE_CLI
  FOREIGN KEY (tipo_identificacion_id)
    REFERENCES tipo_identificacion (tipo_identificacion_id); 	
ALTER TABLE CLIENTE ADD CONSTRAINT FK_tipo_emp_REFERENCE_CLI
  FOREIGN KEY (fact_tipo_empresa_id)
    REFERENCES fact_tipo_empresa (fact_tipo_empresa_id);  	


ALTER TABLE EMPRESA ADD CONSTRAINT FK_EMPR_REFEREN_TIPO_EMPR
 FOREIGN KEY (TIPO_EMPRESA_ID)
    REFERENCES TIPO_EMPRESA (TIPO_EMPRESA_ID);
ALTER TABLE EMPRESA ADD CONSTRAINT FK_EMPR_REFEREN_ESTADO_EMPR
 FOREIGN KEY (ESTADO_EMPRESA_ID)
    REFERENCES ESTADO_EMPRESA (ESTADO_EMPRESA_ID);	
	
CREATE  TABLE   responsabilidad_fiscal_cliente (
  responsabilidad_fiscal_cliente_ID   smallint NOT NULL,
  cliente_ID			    		  int,
  responsabilidad_fiscal_id			  smallint,
  CONSTRAINT PK_responsabilidad_fiscal_cliente
    PRIMARY KEY ( responsabilidad_fiscal_cliente_ID )
);	

ALTER TABLE responsabilidad_fiscal_cliente ADD CONSTRAINT FK_responsabilidad_fiscal_clie
 FOREIGN KEY (cliente_ID)
    REFERENCES cliente (cliente_ID);	
	
ALTER TABLE responsabilidad_fiscal_cliente ADD CONSTRAINT FK_responsabilidad_fiscal_fiscal
 FOREIGN KEY (responsabilidad_fiscal_id)
    REFERENCES responsabilidad_fiscal (responsabilidad_fiscal_id);		

CREATE  TABLE   PAGOS_EMPRESA (
  PAGOS_EMPRESA_ID        INT NOT NULL,
  EMPRESA_ID			   SMALLINT,
  FECHA_VENCIMIENTO		   timestamp,
  NOMBRE                   VARCHAR(50),
  FECHA_REGISTRO           timestamp,
  
  CONSTRAINT PK_PAGOS_EMPRESA
    PRIMARY KEY ( PAGOS_EMPRESA_ID )
);	

ALTER TABLE PAGOS_EMPRESA ADD CONSTRAINT FK_EMPR_REFEREN_PAGOS_EMPR
 FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);

CREATE  TABLE SUB_MENU (
  SUB_MENU_ID                      smallint NOT NULL,
  MENU_ID                          smallint,
  NOMBRE                           VARCHAR(50),
  URL                              VARCHAR(50),
  OP                               smallint,
  DESCRIPCION					   VARCHAR(200),
  CONSTRAINT PK_SUB_MENU
    PRIMARY KEY ( SUB_MENU_ID ) 
);
ALTER TABLE SUB_MENU ADD CONSTRAINT FK_SUB_MENU_REFERENCE_MENU
  FOREIGN KEY (MENU_ID)
    REFERENCES MENU (MENU_ID);
	
CREATE  TABLE USUARIO (
  USUARIO_ID                       int DEFAULT nextval('S_USUARIO'),
  EMPRESA_ID					   SMALLINT,
  NOMBRE                           VARCHAR(100),
  APELLIDO                         VARCHAR(100),
  CORREO                           VARCHAR(50),
  CLAVE                            VARCHAR(50),
  FECHA_REGISTRO                   timestamp,
  IDENTIFICACION                   VARCHAR(20),
  ESTADO                           VARCHAR(1),
  CONSTRAINT PK_USUARIO
    PRIMARY KEY ( USUARIO_ID ) 
);	

ALTER TABLE usuario ADD CONSTRAINT FK_EMPR_REFEREN_USU
 FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);

CREATE  TABLE OPCION_USUARIO (
  OPCION_USUARIO_ID                int NOT NULL DEFAULT nextval('S_OPCION_USUARIO'),
  SUB_MENU_ID                      smallint,
  USUARIO_ID                       int,
  ESTADO                           VARCHAR(1),
  FECHA_REGISTRO                   timestamp,
  CONSTRAINT PK_OPCION_USUARIO
    PRIMARY KEY ( OPCION_USUARIO_ID ) 
);	
ALTER TABLE OPCION_USUARIO ADD CONSTRAINT FK_OPCION_REFERENCE_USUA
  FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);
ALTER TABLE OPCION_USUARIO ADD CONSTRAINT FK_OPCION_REFERENCE_SUB_M
  FOREIGN KEY (SUB_MENU_ID)
    REFERENCES SUB_MENU (SUB_MENU_ID);

CREATE  TABLE ROL_USUARIO (
  ROL_USUARIO_ID                int NOT NULL DEFAULT nextval('S_ROL_USUARIO'),
  ROL_ID                      smallint,
  USUARIO_ID                       int,
  CONSTRAINT PK_ROL_USUARIO
    PRIMARY KEY ( ROL_USUARIO_ID ) 
);	
ALTER TABLE ROL_USUARIO ADD CONSTRAINT FK_ROL_USU_REFERENCE_USUA
  FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);
ALTER TABLE ROL_USUARIO ADD CONSTRAINT FK_ROL_USU_REFERENCE_ROL
  FOREIGN KEY (ROL_ID)
    REFERENCES ROL (ROL_ID);
	
	
CREATE  TABLE retiro_caja (
  retiro_caja_ID                   int NOT NULL,
  usuario_hace_id  				   int,
  usuario_aplica_id  				   int,
  EMPRESA_ID					   SMALLINT,
  valor								decimal,
  cierre_diario 					smallint,
  FECHA_REGISTRO                   timestamp,
  DESCRIPCION					   VARCHAR(500),
  CONSTRAINT PK_retiro_caja
    PRIMARY KEY ( retiro_caja_ID ) 
);

ALTER TABLE retiro_caja ADD CONSTRAINT FK_usuario_hace_REFERENCE_retiro_caja
  FOREIGN KEY (usuario_hace_id)
    REFERENCES usuario (usuario_id);
	
	ALTER TABLE retiro_caja ADD CONSTRAINT FK_usuario_aplica_REFERENCE_retiro_caja
  FOREIGN KEY (usuario_aplica_id)
    REFERENCES usuario (usuario_id);

CREATE  TABLE ACTIVACION (
  ACTIVACION_ID                    smallint NOT NULL ,
  NOMBRE                           VARCHAR(100),
  DESCRIPCION					   VARCHAR(200),
  CONSTRAINT PK_ACTIVACION
    PRIMARY KEY ( ACTIVACION_ID ) 
);

CREATE  TABLE ACTIVACION_USUARIO (
  ACTIVACION_USUARIO_ID            int NOT NULL DEFAULT nextval('S_ACTIVACION_USUARIO'),
  ACTIVACION_ID                    smallint,
  USUARIO_ID                       int,
  ESTADO                           VARCHAR(1),
  FECHA_REGISTRO                   timestamp,
  FECHA_ACTUALIZA                  timestamp,
  CONSTRAINT PK_ACTIVACION_USUARIO
    PRIMARY KEY ( ACTIVACION_USUARIO_ID ) 
);

ALTER TABLE ACTIVACION_USUARIO ADD CONSTRAINT FK_ACTIV_REFERENCE_USUA
  FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);

ALTER TABLE ACTIVACION_USUARIO ADD CONSTRAINT FK_ACT_USU_REFERENCE_ACT
  FOREIGN KEY (ACTIVACION_ID)
    REFERENCES ACTIVACION (ACTIVACION_ID);
	
CREATE  TABLE PRODUCTO (
  PRODUCTO_ID                      int NOT NULL DEFAULT nextval('S_PRODUCTO'),
  GRUPO_ID                         smallint,
  sub_GRUPO_ID                         smallint,
  EMPRESA_ID                       smallint,
  MARCA_ID                         smallint,
  PROVEEDOR_ID                     smallint,
  FECHA_REGISTRO                   timestamp,
  FECHA_VENCIMIENTO                timestamp,
  COSTO                            decimal,
  COSTO_PUBLICO                    decimal,
  IMPUESTO						   decimal,
  STOCK_MIN                        decimal,
  STOCK_MAX                        decimal,
  CODIGO_BARRAS                    VARCHAR(200),
  PESO                             decimal,
  BALANZA                          smallint,
  NOMBRE                           VARCHAR(200),
  CANTIDAD                         decimal,
  UNIDAD                           VARCHAR(20),
  PROMO                            smallint,
  PUB_PROMO                        decimal,
  ESTADO                           smallint,
  KG_PROMO                         decimal,
  UTILIDAD_SUGERIDA                 decimal,
  PORCENTAJE_VENTA                 decimal,
  SUB_PRODUCTO					   smallint,
  IMPRESO_COMANDA                  smallint,
  VARIOS						   SMALLINT,
  GRANEL						   SMALLINT,
  CONSTRAINT PK_PRODUCTO
    PRIMARY KEY ( PRODUCTO_ID ) 
);

ALTER TABLE PRODUCTO ADD CONSTRAINT FK_PRODUCTO_REFERENCE_MARCA
  FOREIGN KEY (MARCA_ID)
    REFERENCES MARCA (MARCA_ID);

ALTER TABLE PRODUCTO ADD CONSTRAINT FK_PRODUCTO_REFERENCE_GRUPO
  FOREIGN KEY (GRUPO_ID)
    REFERENCES GRUPO (GRUPO_ID);
	
ALTER TABLE PRODUCTO ADD CONSTRAINT FK_PRODUCTO_REFERENCE_sub_GRUPO
  FOREIGN KEY (sub_GRUPO_ID)
    REFERENCES sub_GRUPO (sub_GRUPO_ID);

ALTER TABLE PRODUCTO ADD CONSTRAINT FK_PRODUCTO_REFERENCE_PROV
  FOREIGN KEY (PROVEEDOR_ID)
    REFERENCES PROVEEDOR (PROVEEDOR_ID);

ALTER TABLE PRODUCTO ADD CONSTRAINT FK_PRODUCTO_REFERENCE_EMPR
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);	
		
CREATE  TABLE DOCUMENTO (
  DOCUMENTO_ID                     bigint NOT NULL DEFAULT nextval('S_DOCUMENTO'),
  TIPO_DOCUMENTO_ID                smallint,
  nota_id                          bigint,
  EMPRESA_ID					   int,
  PROVEEDOR_ID                     int,
  USUARIO_ID                       int,
  CLIENTE_ID                       int,
  EMPLEADO_ID                      smallint,
  FECHA_REGISTRO                   timestamp DEFAULT CURRENT_TIMESTAMP,
  FECHA_ENTREGA                    timestamp,
  CONSECUTIVO_DIAN                 varchar(20),
  IMPRESO                          smallint,
  TOTAL                            decimal,
  EXCENTO                          decimal,
  GRAVADO                          decimal,
  iva                       	   decimal,
  CIERRE_DIARIO                    smallint,
  DETALLE_ENTRADA                  VARCHAR(50),
  MAC                              VARCHAR(100),
  SALDO                            decimal,
  PESO_TOTAL                       decimal,
  DESCUENTO                        decimal,
  CAMBIO                           decimal,
  iva_5                            decimal,
 iva_19                            decimal,
 base_5                            decimal,
 base_19                           decimal,
 retefuente                        decimal,
 INTERES 			 			   decimal,
 TOTAL_COSTO 					   decimal,
 LETRA_CONSECUTIVO 				   VARCHAR(10),
 ANULADO                           smallint,
 DESCRIPCION_CLIENTE               VARCHAR(1000),
 DESCRIPCION_TRABAJADOR              VARCHAR(1000),
 MODELO_MARCA_ID                            int,
 LINEA_VEHICULO 				   VARCHAR(20),
 impresora 						   varchar(20),
 invoice_id						   smallint,
 CUFE							   varchar(500),
 QRCODE							   varchar(500),
  CONSTRAINT PK_DOCUMENTO
    PRIMARY KEY ( DOCUMENTO_ID ) 
);

COMMENT ON COLUMN DOCUMENTO.DESCRIPCION_CLIENTE IS 'este campo controla la informacion sobre el trabajo dada por el cliente';
COMMENT ON COLUMN DOCUMENTO.DESCRIPCION_TRABAJADOR IS 'este campo controla la informacion sobre el trabajo dada por el trabajador';

ALTER TABLE DOCUMENTO ADD CONSTRAINT FK_DOCU_REFERENCE_CLIEN
  FOREIGN KEY (CLIENTE_ID)
    REFERENCES CLIENTE (CLIENTE_ID);
	
ALTER TABLE DOCUMENTO ADD CONSTRAINT FK_DOCU_REFERENCE_marc_vehi
  FOREIGN KEY (MODELO_MARCA_ID)
    REFERENCES MODELO_MARCA (MODELO_MARCA_ID);
	
ALTER TABLE DOCUMENTO ADD CONSTRAINT FK_DOCU_REFERENCE_invoice
  FOREIGN KEY (INVOICE_ID)
    REFERENCES INVOICE (INVOICE_ID);


ALTER TABLE DOCUMENTO ADD CONSTRAINT FK_DOCU_REFERENCE_USUARIO
  FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);

ALTER TABLE DOCUMENTO ADD CONSTRAINT FK_DOCU_REFERENCE_TIPO
  FOREIGN KEY (TIPO_DOCUMENTO_ID)
    REFERENCES TIPO_DOCUMENTO (TIPO_DOCUMENTO_ID);

ALTER TABLE DOCUMENTO ADD CONSTRAINT FK_DOCU_REFERENCE_PROVEEDOR
  FOREIGN KEY (PROVEEDOR_ID)
    REFERENCES PROVEEDOR (PROVEEDOR_ID);
    
	
CREATE  TABLE DOCUMENTO_NOTA (
  DOCUMENTO_NOTA_ID            int NOT NULL DEFAULT nextval('S_DOCUMENTO_NOTA'),
  DOCUMENTO_ID                    bigint,
  NOTA_ID                         bigint,
  fecha_registro                  timestamp,
  ESTADO                           VARCHAR(1),
  CONSTRAINT PK_DOCUMENTO_NOTA
    PRIMARY KEY ( DOCUMENTO_NOTA_ID ) 
);
    
ALTER TABLE DOCUMENTO_NOTA ADD CONSTRAINT FK_DOCU_REFERENCE_DOCU_NOTA
  FOREIGN KEY (DOCUMENTO_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);

ALTER TABLE DOCUMENTO_NOTA ADD CONSTRAINT FK_DOCU_REFERENCE_DOCU_NOTA_ID
  FOREIGN KEY (NOTA_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);	
	
	
CREATE  TABLE DOCUMENTO_DETALLE (
  DOCUMENTO_DETALLE_ID             bigint NOT NULL DEFAULT nextval('S_DOCUMENTO_DETALLE'),
  DOCUMENTO_ID                     bigint,
  PRODUCTO_ID                      int,
  FECHA_REGISTRO                   timestamp,
  CANTIDAD                         decimal,
  ESTADO                           smallint,
  PARCIAL                          decimal,
  UNITARIO 						   decimal,
 IMPRESO_COMANDA 				   decimal,
 descripcion                       varchar(200),
 url_foto                          varchar(250),
 impuesto_producto				   decimal,
  CONSTRAINT PK_DOCUMENTO_DETALLE
    PRIMARY KEY ( DOCUMENTO_DETALLE_ID ) 
);

COMMENT ON COLUMN DOCUMENTO_DETALLE.IMPRESO_COMANDA IS 'este campo controla cuando el producto esta en algula lista, si es ya se imprimio en como comanda';

ALTER TABLE DOCUMENTO_DETALLE ADD CONSTRAINT FK_DETALLE_REFERENCE_PROD
  FOREIGN KEY (PRODUCTO_ID)
    REFERENCES PRODUCTO (PRODUCTO_ID);

ALTER TABLE DOCUMENTO_DETALLE ADD CONSTRAINT FK_DETALLE_REFERENCE_DOCU
  FOREIGN KEY (DOCUMENTO_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);	
	
	
CREATE  TABLE TIPO_PAGO_DOCUMENTO (
  TIPO_PAGO_DOCUMENTO_ID           int NOT NULL DEFAULT nextval('S_TIPO_PAGO_DOCUMENTO'),
  TIPO_PAGO_ID                    smallint,
  DOCUMENTO_ID                       int,
  FECHA_REGISTRO                   timestamp,
  VALOR								DECIMAL,
  CONSTRAINT PK_TIPO_PAGO_DOCUMENTO
    PRIMARY KEY ( TIPO_PAGO_DOCUMENTO_ID ) 
);	

CREATE  TABLE ABONO (
  ABONO_ID                       int NOT NULL,
  DOCUMENTO_ID                    int,
  TIPO_PAGO_ID                    int,
  USUARIO_ID                      int,
  CANTIDAD                        decimal,
  FECHA_INGRESO                   timestamp,
  CONSTRAINT PK_ABONO
    PRIMARY KEY ( ABONO_ID ) 
);    
ALTER TABLE ABONO ADD CONSTRAINT FK_ABON_REFERENCE_USUARIO
  FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);

ALTER TABLE ABONO ADD CONSTRAINT FK_ABONO_REFERENCE_TIPA
  FOREIGN KEY (TIPO_PAGO_ID)
    REFERENCES TIPO_PAGO (TIPO_PAGO_ID);   
	

ALTER TABLE ABONO ADD CONSTRAINT FK_ABONO_REFERENCE_DOCU
  FOREIGN KEY (DOCUMENTO_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);	
	
CREATE  TABLE CONFIGURACION (
  CONFIGURACION_ID                smallint NOT NULL,
  EMPRESA_ID					  int,
  SERVER						  smallint,
  FECHA_COMBINADA                 smallint,
  impresion_continua              smallint,
  nombre_producto_largo           smallint,
  guardar_facturas                smallint,
  gramera                         smallint,
  num_impresion 				  smallint,
  CONSTRAINT PK_CONFIGURACION
    PRIMARY KEY ( CONFIGURACION_ID ) 
);
ALTER TABLE CONFIGURACION ADD CONSTRAINT FK_CONFIGURACION_REFERENCE_EMPR
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);
COMMENT ON COLUMN configuracion.impresion_continua IS 'campo para controla la impresion de los reportes despues de que se imprima el cuadre de caja(pedido por martin regifo)';
COMMENT ON COLUMN configuracion.FECHA_COMBINADA IS 'campo que controla el nicio del dia, si es = 1 el dia comienza a las 5.59 y termina a las 6.00 del otro dia';
COMMENT ON COLUMN configuracion.nombre_producto_largo IS 'este campo controla si se requiere mas espacio en la descripcion de la factura pero en dos lineas o mas corto pero en una sola linea';
COMMENT ON COLUMN configuracion.guardar_facturas IS 'este campo controla si se guardan las facturas e informes en disco';
COMMENT ON COLUMN configuracion.gramera IS 'este campo controla que tipo y marca de gramera se utiliza';	


CREATE  TABLE IMPRESORA_EMPRESA (
  IMPRESORA_EMPRESA_ID    int NOT NULL DEFAULT nextval('S_IMPRESORA_EMPRESA'),
  EMPRESA_ID			  int,
  TIPO_IMPRESION_id          smallint,
  NUMERO_IMPRESORA		  smallint,
  nombre_impresora        varchar(100),
  CONSTRAINT PK_IMPRESORA_EMPRESA
    PRIMARY KEY ( IMPRESORA_EMPRESA_ID ) 
);


ALTER TABLE IMPRESORA_EMPRESA ADD CONSTRAINT FK_IMPRE_REFERENCE_EMPR
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);
	
	ALTER TABLE IMPRESORA_EMPRESA ADD CONSTRAINT FK_IMPRE_REFERENCE_tipo_imp
  FOREIGN KEY (TIPO_IMPRESION_id)
    REFERENCES TIPO_IMPRESION (TIPO_IMPRESION_id);
	
CREATE  TABLE DOCUMENTO_INVOICE (
  DOCUMENTO_INVOICE_ID    					int NOT NULL DEFAULT nextval('S_DOCUMENTO_INVOICE'),
  DOCUMENTO_ID			  					bigint,
  INVOICE_ID		       					smallint,
  FECHA_REGISTRO							timestamp,
  mensaje        							VARCHAR(500),
  status									VARCHAR(20),
  CONSTRAINT PK_DOCUMENTO_INVOICE
    PRIMARY KEY ( DOCUMENTO_INVOICE_ID ) 
);

ALTER TABLE DOCUMENTO_INVOICE ADD CONSTRAINT FK_DOCU_REFERENCE_INVO_DOCU
  FOREIGN KEY (DOCUMENTO_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);
	
	ALTER TABLE DOCUMENTO_INVOICE ADD CONSTRAINT FK_INVO_REFERENCE_INVO_DOCU
  FOREIGN KEY (INVOICE_ID)
    REFERENCES INVOICE (INVOICE_id);
	
CREATE  TABLE DOCUMENTO_ORDEN (
  DOCUMENTO_ORDEN_ID               bigint NOT NULL DEFAULT nextval('S_DOCUMENTO_ORDEN'),
  DOCUMENTO_ID                     bigint,
  ORDEN_ID                         bigint,
  CONSTRAINT PK_DOCUMENTO_ORDEN
    PRIMARY KEY ( DOCUMENTO_ORDEN_ID ) 
);	
ALTER TABLE DOCUMENTO_ORDEN ADD CONSTRAINT FK_DOCU_REFERENCE_ORDEN
  FOREIGN KEY (DOCUMENTO_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);
	
ALTER TABLE DOCUMENTO_ORDEN ADD CONSTRAINT FK_DOCU_ORD_REFERENCE_ORDEN
  FOREIGN KEY (ORDEN_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);
	
	CREATE  TABLE INFORME_DIARIO (
  		
  INFORME_DIARIO_ID            int NOT NULL,
  EMPRESA_ID                       smallint,
  TOTAL_VENTAS              decimal,
  TOTAL_REMISIONES          decimal,
  IVA_VENTAS                decimal,
  IVA_REMISIONES            decimal,
  FECHA_INGRESO             timestamp,
  FECHA_INFORME             timestamp,
  COSTO_VENTAS            decimal,
  COSTO_REMISIONES            decimal,
  cantidad_Documentos        smallint,
  documento_inicio          VARCHAR(50),
  documento_fin            	VARCHAR(50),
  iva_5                     decimal,
  Iva_19                    decimal,
  base_19                   decimal,
  base_5                    decimal,
  excento                   decimal,
  iva_5_compras             decimal,
  Iva_19_compras            decimal,
  base_19_compras           decimal,
  base_5_compras            decimal,
  excento_compras           decimal,
  cierre_diario				smallint,
  
  CONSTRAINT PK_INFORME_DIARIO
    PRIMARY KEY ( INFORME_DIARIO_ID ) 
);  

ALTER TABLE INFORME_DIARIO ADD CONSTRAINT FK_EMPR_REFERENCE_MARCA
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);
	
CREATE  TABLE INFORME_MENSUAL (	
  INFORME_MENSUAL_ID            int NOT NULL,
  EMPRESA_ID                    smallint,
  COSTO_ENVENTARIO_INICIAL      decimal,
  IVA_ENVENTARIO_INICIAL        decimal,
  COMPRAS                		decimal,
  IVA_COMPRAS            		decimal,
  VENTAS             			decimal,
  IVA_VENTAS             		decimal,
  COSTO_VENTAS            		decimal,
  COSTO_REMISIONES              decimal,
  COSTO_ENTRADAS        		decimal,
  COSTO_SALIDAS          		decimal,
  COSTO_DEVOLUCIONES_VENTA    	decimal,
  COSTO_DEVOLUCIONES_COMPRA     decimal,
  UTILIDAD_BRUTA_MES            decimal,
  INVENTARIO_FINAL              decimal,
  FECHA_INFORME                 timestamp,
  FECHA_INGRESO                 timestamp,
  cierre_MENSUAL				smallint,
  
  CONSTRAINT PK_INFORME_MENSUAL
    PRIMARY KEY ( INFORME_MENSUAL_ID ) 
); 

-- Table: public.proporcion

-- DROP TABLE public.proporcion;

CREATE TABLE public.proporcion
(
    proporcion_id smallint NOT NULL,
    base integer,
    variable integer,
    contador_factura integer,
    contador_remision integer,
    rango_par_a numeric,
    rango_par_b numeric,
    rango_impar_a numeric,
    rango_impar_b numeric,
    empresa_id smallint,
    CONSTRAINT pk_proporcion_id PRIMARY KEY (proporcion_id),
    CONSTRAINT fk_empr_reference_proporc FOREIGN KEY (empresa_id)
        REFERENCES public.empresa (empresa_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.proporcion
    OWNER to postgres;

GRANT ALL ON TABLE public.proporcion TO facturacion;

GRANT ALL ON TABLE public.proporcion TO postgres; 

ALTER TABLE INFORME_MENSUAL ADD CONSTRAINT FK_INFO_MENSU_REFERENCE_EMPR
  FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);
	


CREATE  TABLE PRODUCTO_PRECIOS (
  PRODUCTO_PRECIOS_ID                         int NOT NULL DEFAULT nextval('S_PRODUCTO_PRECIOS'),
  PRODUCTO_ID			           int,
  PRECIO_2						   DECIMAL,
  PRECIO_3						   DECIMAL,
  PRECIO_4						   DECIMAL,
  PRECIO_5						   DECIMAL,
  PRECIO_6						   DECIMAL,
  PRECIO_7						   DECIMAL,
  PRECIO_8						   DECIMAL,
  PRECIO_9						   DECIMAL,
  PRECIO_10						   DECIMAL,
  CONSTRAINT PK_PRODUCTO_PRECIOS
    PRIMARY KEY ( PRODUCTO_PRECIOS_ID ) 
);

ALTER TABLE PRODUCTO_PRECIOS ADD CONSTRAINT FK_PROD_REFERENCE_PRECIO
  FOREIGN KEY (PRODUCTO_ID)
    REFERENCES PRODUCTO (PRODUCTO_ID);	

CREATE  TABLE CAMPO_INVENTARIO (
  CAMPO_INVENTARIO_ID              smallint NOT NULL ,
  NOMBRE                           VARCHAR(100),
  DESCRIPCION					   VARCHAR(200),
  CONSTRAINT PK_CAMPO_INVENTARIO
    PRIMARY KEY ( CAMPO_INVENTARIO_ID ) 
);


CREATE  TABLE CAMPO_INVENTARIO_USUARIO (
  CAMPO_INVENTARIO_USUARIO_ID      int NOT NULL DEFAULT nextval('S_CAMPO_INVENTARIO_USUARIO'),
  CAMPO_INVENTARIO_ID                    smallint,
  USUARIO_ID                       int,
  CONSTRAINT PK_CAMPO_INVENTARIO_USUARIO
    PRIMARY KEY ( CAMPO_INVENTARIO_USUARIO_ID ) 
);

ALTER TABLE CAMPO_INVENTARIO_USUARIO ADD CONSTRAINT FK_CAMPO_INVENTARIO_REFERENCE_USUARIO
 FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);	
	
ALTER TABLE CAMPO_INVENTARIO_USUARIO ADD CONSTRAINT FK_CAMPO_USUARIO_REFERENCE_CAMPO
 FOREIGN KEY (CAMPO_INVENTARIO_ID)
   REFERENCES CAMPO_INVENTARIO (CAMPO_INVENTARIO_ID);		


CREATE  TABLE USUARIO_EMPLEADO (
  USUARIO_EMPLEADO_ID      int NOT NULL DEFAULT nextval('S_USUARIO_EMPLEADO'),
  USUARIO_ID                       int,
  EMPLEADO_ID                       int,
  CONSTRAINT PK_USUARIO_EMPLEADO
    PRIMARY KEY ( USUARIO_EMPLEADO_ID ) 
);

ALTER TABLE USUARIO_EMPLEADO ADD CONSTRAINT FK_USU_EMPLE_REFERENCE_USUARIO
 FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);	

ALTER TABLE USUARIO_EMPLEADO ADD CONSTRAINT FK_USU_EMPLE_REFERENCE_EMPLEADO
 FOREIGN KEY (EMPLEADO_ID)
    REFERENCES EMPLEADO (EMPLEADO_ID);
	
	
CREATE  TABLE VEHICULO (
  VEHICULO_ID                        int NOT NULL,
  CLIENTE_ID                         int,
  MARCA_VEHICULO_ID					 smallint,
  MODELO_MARCA_ID                    int NOT NULL,
  PLACA                              VARCHAR(10),
  LINEA_VEHICULO                     VARCHAR(20),
  CONSTRAINT PK_VEHICULO
    PRIMARY KEY ( VEHICULO_ID ) 
);

ALTER TABLE VEHICULO ADD CONSTRAINT FK_VEHICULO_REFERENCE_CLIENT
 FOREIGN KEY (CLIENTE_ID)
    REFERENCES CLIENTE (CLIENTE_ID);

ALTER TABLE VEHICULO ADD CONSTRAINT FK_VEHICULO_REFERENCE_MARCA
 FOREIGN KEY (MARCA_VEHICULO_ID)
    REFERENCES MARCA_VEHICULO (MARCA_VEHICULO_ID);

ALTER TABLE VEHICULO ADD CONSTRAINT FK_VEHICULO_REFERENCE_MODELO
 FOREIGN KEY (MODELO_MARCA_ID)
    REFERENCES MODELO_MARCA (MODELO_MARCA_ID);			
	
CREATE  TABLE TIPO_BONO (
  TIPO_BONO_ID              smallint NOT NULL ,
  NOMBRE                           VARCHAR(100),
  CONSTRAINT PK_TIPO_BONO
    PRIMARY KEY ( TIPO_BONO_ID ) 
);	
	
CREATE  TABLE BONO (
  BONO_ID                        int NOT NULL,
  VEHICULO_ID                         int,
  TIPO_BONO_ID					 smallint,
  USUARIO_ID                    int ,
  DOCUMENTO_ID					BIGint,
  EMPRESA_ID					INT,
  OBSERVACION                   VARCHAR(300),
  TOTAL							DECIMAL,
  ESTADO						VARCHAR(20),
  FECHA_REGISTRO                timestamp,
  FECHA_USO                		timestamp,
  CONSTRAINT PK_BONO
    PRIMARY KEY ( BONO_ID ) 
);

ALTER TABLE BONO ADD CONSTRAINT FK_VEHICULO_REFERENCE_BONO
 FOREIGN KEY (VEHICULO_ID)
    REFERENCES VEHICULO (VEHICULO_ID);	

ALTER TABLE BONO ADD CONSTRAINT FK_TIPO_BONO_REFERENCE_BONO
 FOREIGN KEY (TIPO_BONO_ID)
    REFERENCES TIPO_BONO (TIPO_BONO_ID);	

ALTER TABLE BONO ADD CONSTRAINT FK_USU_REFERENCE_BONO
 FOREIGN KEY (USUARIO_ID)
    REFERENCES USUARIO (USUARIO_ID);		
	
	ALTER TABLE BONO ADD CONSTRAINT FK_DOCUMENTO_REFERENCE_BONO
 FOREIGN KEY (DOCUMENTO_ID)
    REFERENCES DOCUMENTO (DOCUMENTO_ID);	
	
ALTER TABLE BONO ADD CONSTRAINT FK_empr_REFERENCE_BONO
 FOREIGN KEY (EMPRESA_ID)
    REFERENCES EMPRESA (EMPRESA_ID);	

	
GRANT ALL PRIVILEGES ON DATABASE facturacion_local to facturacion;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO facturacion;	
GRANT ALL PRIVILEGES ON ALL sequences IN SCHEMA public TO facturacion;
commit;